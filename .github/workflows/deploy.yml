name: Build and Deploy to GKE

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: meditrack-cluster
  GKE_ZONE: us-central1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [appointment_service, notification_service, patient_service]
        include:
          - service: appointment_service
            port: 8003
            image_name: appointment-service

          - service: notification_service
            port: 8004
            image_name: notification-service

          - service: patient_service
            port: 8001
            image_name: patient-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Configure Docker
        run: gcloud --quiet auth configure-docker

      - name: Configure kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Create Kubernetes Secrets
        run: |
          kubectl create secret generic healthsync-secrets \
            --from-literal=mongo-url=${{ secrets.MONGO_URL }} \
            --from-literal=redshift-host=${{ secrets.REDSHIFT_HOST }} \
            --from-literal=redshift-user=${{ secrets.REDSHIFT_USER }} \
            --from-literal=redshift-password=${{ secrets.REDSHIFT_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Build and Push Docker Image
        run: |
          echo "Building and pushing image for service: ${{ matrix.service }}"
          
          # Build the Docker image
          docker build \
            --tag "gcr.io/$PROJECT_ID/${{ matrix.image_name }}:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            services/${{ matrix.service }}
          
          # Push the Docker image
          docker push "gcr.io/$PROJECT_ID/${{ matrix.image_name }}:$GITHUB_SHA"

      - name: validate before
        run: |
          echo "Testing Green environment for service: ${{ matrix.service }}"
          curl -s http://34.41.192.165:8003/health || exit 1

      - name: Deploy Service to GKE
        run: |
          echo "Deploying service: ${{ matrix.service }} to GKE"
          
          # Update deployment YAML with the specific image
          sed -i "s|gcr.io/$PROJECT_ID/${{ matrix.image_name }}:latest|gcr.io/$PROJECT_ID/${{ matrix.image_name }}:$GITHUB_SHA|" \
            kubernetes/${{ matrix.image_name }}/deployment.yaml

          # Apply deployment and wait for rollout
          kubectl apply -f kubernetes/${{ matrix.image_name }}/
          kubectl rollout status deployment/${{ matrix.image_name }}

      - name: validate after
        run: |
          echo "Testing Green environment for service: ${{ matrix.service }}"
          curl -s http://34.41.192.165:8003/health || exit 1

      - name: Deploy Aggregator CronJob
        run: |
          echo "Building and deploying aggregator service"

          # Build and push the aggregator image
          docker build \
            -t "gcr.io/$PROJECT_ID/aggregator_service:$GITHUB_SHA" \
            services/aggregator_service
          docker push "gcr.io/$PROJECT_ID/aggregator_service:$GITHUB_SHA"

          # Update CronJob YAML with the specific image
          sed -i "s|gcr.io/$PROJECT_ID/aggregator_service:latest|gcr.io/$PROJECT_ID/aggregator_service:$GITHUB_SHA|" \
            kubernetes/aggregator_service/cronjob.yaml

          # Apply CronJob configuration
          kubectl apply -f kubernetes/aggregator_service/cronjob.yaml